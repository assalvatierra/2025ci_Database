-- Script converted to PostgreSQL from SQL Server
-- Original script was generated by Devart Entity Developer, Version 6.7.965.0
-- Script date 10/26/2025 11:00:33 AM
-- Target Server: PostgreSQL

-- 
-- Creating a table BusinessUnit 
-- 
CREATE TABLE IF NOT EXISTS BusinessUnit (
   Id SERIAL PRIMARY KEY,
   Name VARCHAR(4000) NOT NULL,
   Description VARCHAR(4000),
   Remarks VARCHAR(4000),
   Code VARCHAR(4000),
   SortOrder INT
);

-- 
-- Creating a table ItemStatusClass 
-- 
CREATE TABLE IF NOT EXISTS ItemStatusClass (
   Id SERIAL PRIMARY KEY,
   Name VARCHAR(4000) NOT NULL,
   Description VARCHAR(4000),
   Remarks VARCHAR(4000),
   Code VARCHAR(4000),
   SortOrder INT
);

-- 
-- Creating a table ItemTypeClass 
-- 
CREATE TABLE IF NOT EXISTS ItemTypeClass (
   Id SERIAL PRIMARY KEY,
   Name VARCHAR(4000) NOT NULL,
   Description VARCHAR(4000),
   Remarks VARCHAR(4000),
   Code VARCHAR(4000),
   SortOrder INT
);

-- 
-- Creating a table RefCountry 
-- 
CREATE TABLE IF NOT EXISTS RefCountry (
   Id SERIAL PRIMARY KEY,
   Name VARCHAR(4000) NOT NULL,
   Description VARCHAR(4000),
   Remarks VARCHAR(4000),
   Code VARCHAR(4000),
   SortOrder INT
);

-- 
-- Creating a table ItemType 
-- 
CREATE TABLE IF NOT EXISTS ItemType (
   Id SERIAL PRIMARY KEY,
   Name VARCHAR(4000) NOT NULL,
   Description VARCHAR(4000),
   Remarks VARCHAR(4000),
   Code VARCHAR(4000),
   SortOrder INT,
   ItemTypeClassId INT,
   CONSTRAINT FK_ItemType_ItemTypeClass_0 FOREIGN KEY (ItemTypeClassId) REFERENCES ItemTypeClass (Id)
);

-- 
-- Creating a table ItemStatus 
-- 
CREATE TABLE IF NOT EXISTS ItemStatus (
   Id SERIAL PRIMARY KEY,
   Name VARCHAR(4000) NOT NULL,
   Description VARCHAR(4000),
   Remarks VARCHAR(4000),
   Code VARCHAR(4000),
   SortOrder INT,
   ItemStatusClassId INT,
   CONSTRAINT FK_ItemStatus_ItemStatusClass_0 FOREIGN KEY (ItemStatusClassId) REFERENCES ItemStatusClass (Id)
);

-- 
-- Creating a table RefCity 
-- 
CREATE TABLE IF NOT EXISTS RefCity (
   Id SERIAL PRIMARY KEY,
   Name VARCHAR(4000) NOT NULL,
   Description VARCHAR(4000),
   Remarks VARCHAR(4000),
   Code VARCHAR(4000),
   SortOrder INT,
   CountryId INT,
   RefCountryId INT,
   CONSTRAINT FK_RefCity_RefCountry_0 FOREIGN KEY (RefCountryId) REFERENCES RefCountry (Id)
);

-- 
-- Creating a table JobMain 
-- 
CREATE TABLE IF NOT EXISTS JobMain (
   Id SERIAL PRIMARY KEY,
   JobDate TIMESTAMP NOT NULL,
   Description VARCHAR(4000) NOT NULL,
   CreatedBy VARCHAR(4000) NOT NULL,
   CreatedOn TIMESTAMP NOT NULL,
   LastEditBy VARCHAR(4000) NOT NULL,
   LastEditOn TIMESTAMP NOT NULL,
   isArchived BOOLEAN NOT NULL,
   isPrivate BOOLEAN NOT NULL,
   isActive BOOLEAN NOT NULL,
   ItemStatusId INT,
   BusinessUnitId INT,
   CONSTRAINT FK_JobMain_ItemStatus_0 FOREIGN KEY (ItemStatusId) REFERENCES ItemStatus (Id),
   CONSTRAINT FK_JobMain_BusinessUnit_1 FOREIGN KEY (BusinessUnitId) REFERENCES BusinessUnit (Id)
);

-- 
-- Creating a table ServiceItem 
-- 
CREATE TABLE IF NOT EXISTS ServiceItem (
   Id SERIAL PRIMARY KEY,
   Name VARCHAR(4000) NOT NULL,
   Description VARCHAR(4000),
   Remarks VARCHAR(4000),
   Code VARCHAR(4000),
   SortOrder INT,
   CreatedBy VARCHAR(4000) NOT NULL,
   CreatedOn TIMESTAMP NOT NULL,
   LastEditBy VARCHAR(4000) NOT NULL,
   LastEditOn TIMESTAMP NOT NULL,
   isArchived BOOLEAN NOT NULL,
   isPrivate BOOLEAN NOT NULL,
   isActive BOOLEAN NOT NULL,
   ItemTypeId INT,
   ItemStatusId INT,
   CONSTRAINT FK_ServiceItem_ItemType_0 FOREIGN KEY (ItemTypeId) REFERENCES ItemType (Id),
   CONSTRAINT FK_ServiceItem_ItemStatus_1 FOREIGN KEY (ItemStatusId) REFERENCES ItemStatus (Id)
);

-- 
-- Creating a table Contact 
-- 
CREATE TABLE IF NOT EXISTS Contact (
   Id SERIAL PRIMARY KEY,
   Name VARCHAR(4000) NOT NULL,
   Remarks VARCHAR(4000),
   ContactNo1 VARCHAR(4000),
   ContactNo2 VARCHAR(4000),
   Address1 VARCHAR(4000),
   Address2 VARCHAR(4000),
   Email1 VARCHAR(4000),
   Email2 VARCHAR(4000),
   CreatedBy VARCHAR(4000) NOT NULL,
   CreatedOn TIMESTAMP NOT NULL,
   LastEditBy VARCHAR(4000) NOT NULL,
   LastEditOn TIMESTAMP NOT NULL,
   isArchived BOOLEAN NOT NULL,
   isPrivate BOOLEAN NOT NULL,
   isActive BOOLEAN NOT NULL,
   TypeId INT,
   StatusId INT NOT NULL,
   RefCityId INT,
   CONSTRAINT FK_Contact_ItemType_0 FOREIGN KEY (TypeId) REFERENCES ItemType (Id),
   CONSTRAINT FK_Contact_ItemStatus_1 FOREIGN KEY (StatusId) REFERENCES ItemStatus (Id),
   CONSTRAINT FK_Contact_RefCity_2 FOREIGN KEY (RefCityId) REFERENCES RefCity (Id)
);

-- 
-- Creating a table Entity 
-- 
CREATE TABLE IF NOT EXISTS Entity (
   Id SERIAL PRIMARY KEY,
   Name VARCHAR(4000) NOT NULL,
   Description VARCHAR(4000),
   Remarks VARCHAR(4000),
   Code VARCHAR(4000),
   SortOrder INT,
   ContactNo1 VARCHAR(4000),
   ContactNo2 VARCHAR(4000),
   Address1 VARCHAR(4000),
   Address2 VARCHAR(4000),
   Email1 VARCHAR(4000),
   Email2 VARCHAR(4000),
   CreatedBy VARCHAR(4000) NOT NULL,
   CreatedOn TIMESTAMP NOT NULL,
   LastEditBy VARCHAR(4000) NOT NULL,
   LastEditOn TIMESTAMP NOT NULL,
   isArchived BOOLEAN NOT NULL,
   isPrivate BOOLEAN NOT NULL,
   isActive BOOLEAN NOT NULL,
   EntityTypeId INT,
   EntityStatusId INT,
   BusinessUnitId INT,
   RefCityId INT,
   CONSTRAINT FK_Entity_ItemType_0 FOREIGN KEY (EntityTypeId) REFERENCES ItemType (Id),
   CONSTRAINT FK_Entity_ItemStatus_1 FOREIGN KEY (EntityStatusId) REFERENCES ItemStatus (Id),
   CONSTRAINT FK_Entity_BusinessUnit_2 FOREIGN KEY (BusinessUnitId) REFERENCES BusinessUnit (Id),
   CONSTRAINT FK_Entity_RefCity_3 FOREIGN KEY (RefCityId) REFERENCES RefCity (Id)
);

-- 
-- Creating a table JobContact 
-- 
CREATE TABLE IF NOT EXISTS JobContact (
   Id SERIAL PRIMARY KEY,
   JobMainId INT,
   ContactId INT,
   IsPrimary BOOLEAN NOT NULL,
   Notes VARCHAR(4000),
   CONSTRAINT FK_JobContact_JobMain_0 FOREIGN KEY (JobMainId) REFERENCES JobMain (Id),
   CONSTRAINT FK_JobContact_Contact_1 FOREIGN KEY (ContactId) REFERENCES Contact (Id)
);

-- 
-- Creating a table JobCustomer 
-- 
CREATE TABLE IF NOT EXISTS JobCustomer (
   Id SERIAL PRIMARY KEY,
   JobMainId INT,
   CustomerId INT,
   IsPrimary BOOLEAN NOT NULL,
   IsBillTo BOOLEAN NOT NULL,
   Notes VARCHAR(4000),
   CONSTRAINT FK_JobCustomer_JobMain_0 FOREIGN KEY (JobMainId) REFERENCES JobMain (Id),
   CONSTRAINT FK_JobCustomer_Entity_1 FOREIGN KEY (CustomerId) REFERENCES Entity (Id)
);

-- 
-- Creating a table EntityContact 
-- 
CREATE TABLE IF NOT EXISTS EntityContact (
   Id SERIAL PRIMARY KEY,
   ContactId INT,
   EntityId INT,
   Notes VARCHAR(4000),
   CONSTRAINT FK_EntityContact_Contact_0 FOREIGN KEY (ContactId) REFERENCES Contact (Id),
   CONSTRAINT FK_EntityContact_Entity_1 FOREIGN KEY (EntityId) REFERENCES Entity (Id)
);

-- 
-- Creating a table JobService 
-- 
CREATE TABLE IF NOT EXISTS JobService (
   Id SERIAL PRIMARY KEY,
   JobMainId INT,
   Particulars VARCHAR(4000),
   DateStart TIMESTAMP,
   DateEnd TIMESTAMP,
   QuotedAmt DECIMAL,
   SupplierAmt DECIMAL,
   CreatedBy VARCHAR(4000) NOT NULL,
   CreatedOn TIMESTAMP NOT NULL,
   LastEditBy VARCHAR(4000) NOT NULL,
   LastEditOn TIMESTAMP NOT NULL,
   isArchived BOOLEAN NOT NULL,
   isPrivate BOOLEAN NOT NULL,
   isActive BOOLEAN NOT NULL,
   ServiceItemId INT,
   SupplierId INT,
   ItemStatusId INT,
   SortOrder INT NOT NULL,
   CONSTRAINT FK_JobService_JobMain_0 FOREIGN KEY (JobMainId) REFERENCES JobMain (Id),
   CONSTRAINT FK_JobService_ServiceItem_1 FOREIGN KEY (ServiceItemId) REFERENCES ServiceItem (Id),
   CONSTRAINT FK_JobService_Entity_2 FOREIGN KEY (SupplierId) REFERENCES Entity (Id),
   CONSTRAINT FK_JobService_ItemStatus_3 FOREIGN KEY (ItemStatusId) REFERENCES ItemStatus (Id)
);

-- 
-- Creating a table JobServiceContact 
-- 
CREATE TABLE IF NOT EXISTS JobServiceContact (
   Id SERIAL PRIMARY KEY,
   ContactId INT,
   JobServiceId INT,
   Notes VARCHAR(4000) NOT NULL,
   IsPrimary BOOLEAN NOT NULL,
   CONSTRAINT FK_JobServiceContact_Contact_0 FOREIGN KEY (ContactId) REFERENCES Contact (Id),
   CONSTRAINT FK_JobServiceContact_JobService_1 FOREIGN KEY (JobServiceId) REFERENCES JobService (Id)
);

